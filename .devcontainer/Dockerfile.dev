# Development Dockerfile for YAPAY SDK
# Based on the official builder for 100% consistency
FROM metalmon/yapay:builder

# Switch to root for development setup
USER root

# Install additional development tools (build tools like git, gcc, make are already in the base image)
RUN apk add --no-cache \
    # Development tools
    curl \
    wget \
    jq \
    file \
    vim \
    nano \
    htop \
    tree \
    bash \
    bash-completion \
    # Network tools
    netcat-openbsd \
    tcpdump \
    # Debugging tools
    strace \
    gdb \
    && rm -rf /var/cache/apk/*

# Install CloudPub tunnel tool
RUN CLOUDPUB_VERSION="2.4.1" && \
    CLOUDPUB_ARCH="linux-x86_64" && \
    CLOUDPUB_URL="https://cloudpub.ru/download/stable/clo-${CLOUDPUB_VERSION}-stable-${CLOUDPUB_ARCH}.tar.gz" && \
    wget -q "$CLOUDPUB_URL" -O "clo-${CLOUDPUB_VERSION}-stable-${CLOUDPUB_ARCH}.tar.gz" && \
    tar -xf "clo-${CLOUDPUB_VERSION}-stable-${CLOUDPUB_ARCH}.tar.gz" && \
    chmod +x ./clo && \
    mv ./clo /usr/local/bin/clo && \
    rm -f "clo-${CLOUDPUB_VERSION}-stable-${CLOUDPUB_ARCH}.tar.gz" || \
    echo "CloudPub tunnel installation failed - continuing without it"

# Install Go development tools (Go is guaranteed to be in the base image)
RUN go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest && \
    go install github.com/securecodewarrior/gosec/v2/cmd/gosec@latest && \
    go install github.com/go-delve/delve/cmd/dlv@latest && \
    go install github.com/air-verse/air@latest && \
    go install golang.org/x/tools/cmd/goimports@latest

# Create development workspace
WORKDIR /workspace

# Create directories for SDK development
RUN mkdir -p /workspace/sdk /workspace/examples /workspace/tools /workspace/plugins

# Set up bash completion and aliases
RUN echo 'source /usr/share/bash-completion/bash_completion' >> /root/.bashrc && \
    echo 'alias ll="ls -la"' >> /root/.bashrc && \
    echo 'alias la="ls -la"' >> /root/.bashrc && \
    echo 'alias ..="cd .."' >> /root/.bashrc && \
    echo 'alias ...="cd ../.."' >> /root/.bashrc && \
    echo 'export PATH=$PATH:/go/bin' >> /root/.bashrc && \
    echo 'export GOPATH=/go' >> /root/.bashrc

# Create development user
RUN addgroup -g 1000 -S dev && \
    adduser -u 1000 -S dev -G dev -s /bin/bash && \
    echo 'export PATH=$PATH:/go/bin' >> /home/dev/.bashrc && \
    echo 'export GOPATH=/go' >> /home/dev/.bashrc

# Set ownership of workspace and Go cache
RUN chown -R dev:dev /workspace /go

# Create development scripts directory
RUN mkdir -p /scripts && chown -R dev:dev /scripts

# Set environment variables
ENV GO111MODULE=on
ENV GOPROXY=https://proxy.golang.org,direct
ENV GOSUMDB=sum.golang.org
ENV CGO_ENABLED=1
ENV GOOS=linux
ENV GOARCH=amd64
ENV LOG_LEVEL=debug
ENV YANDEX_SANDBOX_MODE=true
ENV METRICS_PORT=8080
ENV TERM=xterm-256color
ENV COLORTERM=truecolor

# Expose ports for development
EXPOSE 8080 8081 2345

# Default command - keep container running
CMD ["tail", "-f", "/dev/null"]