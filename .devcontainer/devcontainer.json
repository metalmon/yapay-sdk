{
  "name": "Yapay SDK - Development",
  "build": {
    "dockerfile": "Dockerfile.dev",
    "context": ".."
  },

  // Configure tool-specific properties
  "customizations": {
    "vscode": {
      "settings": {
        "go.toolsManagement.checkForUpdates": "local",
        "go.useLanguageServer": true,
        "go.gopath": "/go",
        "go.goroot": "/usr/local/go",
        "go.formatTool": "goimports",
        "go.lintTool": "golangci-lint",
        "go.lintFlags": ["--fast"],
        "go.testFlags": ["-v"],
        "go.testTimeout": "30s",
        "go.buildOnSave": "package",
        "go.lintOnSave": "package",
        "go.vetOnSave": "package",
        "go.coverOnSave": "package",
        "go.coverOnSingleTest": true,
        "go.coverOnSingleTestFile": true,
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
          "source.organizeImports": "explicit"
        },
        "files.eol": "\n",
        "files.insertFinalNewline": true,
        "files.trimTrailingWhitespace": true,
        "terminal.integrated.defaultProfile.linux": "bash"
      },
      "extensions": [
        "golang.Go",
        "ms-vscode.vscode-json",
        "redhat.vscode-yaml",
        "ms-vscode.vscode-docker",
        "ms-kubernetes-tools.vscode-kubernetes-tools",
        "ms-vscode.makefile-tools",
        "github.vscode-pull-request-github",
        "ms-vscode.vscode-github-issue-notebooks",
        "ms-vscode.vscode-markdown",
        "esbenp.prettier-vscode",
        "ms-vscode.vscode-typescript-next",
        "ms-vscode.vscode-eslint",
        "ms-vscode.vscode-prettier",
        "ms-vscode.vscode-json",
        "ms-vscode.vscode-yaml",
        "ms-vscode.vscode-docker",
        "ms-vscode.vscode-kubernetes-tools",
        "ms-vscode.vscode-github-issue-notebooks",
        "ms-vscode.vscode-markdown",
        "ms-vscode.vscode-typescript-next",
        "ms-vscode.vscode-eslint",
        "ms-vscode.vscode-prettier"
      ]
    }
  },

  // Use 'forwardPorts' to make a list of ports inside the container available locally
  "forwardPorts": [8080, 8081, 2345, 8082],

  // Use 'postCreateCommand' to run commands after the container is created
  "postCreateCommand": "cd /workspace/sdk && go mod download && go mod verify",

  // Use 'postStartCommand' to run commands after the container starts
  "postStartCommand": "cd /workspace/sdk && make install-deps",

  // Configure tool-specific properties
  "remoteUser": "dev",

  // Set environment variables
  "containerEnv": {
    "GO111MODULE": "on",
    "GOPROXY": "https://proxy.golang.org,direct",
    "GOSUMDB": "sum.golang.org",
    "CGO_ENABLED": "1",
    "GOOS": "linux",
    "GOARCH": "amd64",
    "LOG_LEVEL": "debug",
    "GIN_MODE": "debug",
    "AIR_WORKSPACE": "/workspace/sdk",
    "AIR_TMP_DIR": "/tmp"
  },

  // Use 'runArgs' to configure Docker
  "runArgs": [
    "--init"
  ],

  // Use 'shutdownAction' to configure what happens when the container shuts down
  "shutdownAction": "stopContainer",

  // Use 'updateContentCommand' to run commands after the container is updated
  "updateContentCommand": "cd /workspace/sdk && go mod tidy",

  // Use 'remoteEnv' to set environment variables that will be available in the container
  "remoteEnv": {
    "PATH": "${containerEnv:PATH}:/go/bin"
  },

  // Features to add to the dev container
  "features": {
    "ghcr.io/devcontainers/features/git:1": {}
  }
}
